"use client";
import { useState } from 'react';

interface ExportData {
  query: string;
  answer: string;
  facts: any[];
  timestamp: string;
}

export function ExportButton({ data }: { data: ExportData }) {
  const [isOpen, setIsOpen] = useState(false);

  const exportAsMarkdown = () => {
    const md = `# Query: ${data.query}

**Generated:** ${data.timestamp}

## Answer

${data.answer}

## Sources

${data.facts.map((f, i) => `${i + 1}. **${f.predicate}**: ${f.subject} â†’ ${f.object}
   - Source: ${f.source_url || 'N/A'}
   - Trust Score: ${f.trust_score != null ? f.trust_score.toFixed(2) : 'N/A'}
   - Timestamp: ${f.ts || 'N/A'}`).join('\n\n')}

---
*Generated by GEO (Generative Engine Optimization)*
`;

    downloadFile(md, `geo-answer-${Date.now()}.md`, 'text/markdown');
    setIsOpen(false);
  };

  const exportAsJSON = () => {
    const json = JSON.stringify(data, null, 2);
    downloadFile(json, `geo-answer-${Date.now()}.json`, 'application/json');
    setIsOpen(false);
  };

  const downloadFile = (content: string, filename: string, type: string) => {
    const blob = new Blob([content], { type });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (!data.answer) return null;

  return (
    <div className="relative">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="px-3 py-1.5 text-sm rounded bg-slate-700 dark:bg-slate-800 hover:bg-slate-600 dark:hover:bg-slate-700 transition-colors"
      >
        ðŸ“¥ Export
      </button>
      
      {isOpen && (
        <>
          {/* Backdrop */}
          <div
            className="fixed inset-0 z-40"
            onClick={() => setIsOpen(false)}
          />
          
          {/* Menu */}
          <div className="absolute right-0 mt-2 w-48 rounded-lg bg-white dark:bg-slate-800 shadow-xl border border-slate-200 dark:border-slate-700 z-50">
            <button
              onClick={exportAsMarkdown}
              className="w-full text-left px-4 py-2 text-sm hover:bg-slate-100 dark:hover:bg-slate-700 rounded-t-lg transition-colors"
            >
              ðŸ“„ Markdown (.md)
            </button>
            <button
              onClick={exportAsJSON}
              className="w-full text-left px-4 py-2 text-sm hover:bg-slate-100 dark:hover:bg-slate-700 rounded-b-lg transition-colors"
            >
              ðŸ“Š JSON (.json)
            </button>
          </div>
        </>
      )}
    </div>
  );
}
